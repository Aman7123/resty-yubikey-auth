name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Lua 5.1
      uses: leafo/gh-actions-lua@v10
      with:
        luaVersion: '5.1'

    - uses: leafo/gh-actions-luarocks@v4

    - name: Install Dependencies
      run: |
        luarocks install luasec
        luarocks install luafilesystem
        luarocks install luasocket
        luarocks install luacheck
        luarocks install lua-cjson
        luarocks install penlight
        luarocks install lua-resty-http
        luarocks install lua-resty-string

    - name: Lint Code with Luacheck
      run: |
        luacheck . --no-color --exclude-files ".*"

    - name: Find .rockspec File
      id: find_rockspec
      run: |
        rockspec_file=$(find . -maxdepth 1 -name "*.rockspec" | head -n 1)
        echo "Found rockspec file: $rockspec_file"
        echo "::set-output name=rockspec_file::$rockspec_file"

    - name: Get Semantic Version from .rockspec
      id: get_version
      run: |
        FULL_VERSION=$(grep -oP '(?<=^version = ")[^"]*' resty-yubikey-auth.rockspec)
        SEMVER=$(echo "$FULL_VERSION" | sed 's/-[0-9]*$//')
        echo "Full Version: $FULL_VERSION"
        echo "Semantic Version: $SEMVER"
        echo "::set-output name=semver::$SEMVER"

    - name: Build LuaRocks Package
      run: |
        luarocks make
        luarocks pack ${{ steps.find_rockspec.outputs.rockspec_file }}

    - name: Upload Rock to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: resty-yubikey-auth-rock
        path: "*.rock"

    # - name: Create GitHub Release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: "v${{ steps.get_version.outputs.version }}"
    #     release_name: "Release v${{ steps.get_version.outputs.version }}"
    #     draft: false
    #     prerelease: false
    #     body: "Automated release of version ${{ steps.get_version.outputs.version }}."

    # - name: Upload .rock File to Release
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: rocks/*.rock
    #     asset_name: resty-yubikey-auth-${{ steps.get_version.outputs.version }}.rock
    #     asset_content_type: application/x-tar