name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Lua 5.1
      uses: leafo/gh-actions-lua@v10
      with:
        luaVersion: '5.1'

    - name: Lint Code with Luacheck
      run: |
        luacheck . --no-color --exclude-files ".*"

    - name: Find .rockspec File
      id: find_rockspec
      run: |
        rockspec_file=$(find . -maxdepth 1 -name "*.rockspec" | head -n 1)
        echo "Found rockspec file: $rockspec_file"
        echo "::set-output name=rockspec_file::$rockspec_file"

    - name: Get App Version, Name, and Combined Variable from Lua File
      id: get_version_and_name
      run: |
        NAME=$(grep -oP '(?<=^local name = ")[^"]*' config.lua)
        APP_VERSION=$(grep -oP '(?<=^local app_version = ")[^"]*' config.lua)
        NAME_VERSION="${NAME}-${APP_VERSION}"
        echo "Name: $NAME"
        echo "App Version: $APP_VERSION"
        echo "Name and Version: $NAME_VERSION"
        echo "::set-output name=name::$NAME"
        echo "::set-output name=app_version::$APP_VERSION"
        echo "::set-output name=name_version::$NAME_VERSION"

    - name: Build Package
      run: |
        tar czf ${{ steps.get_version_and_name.outputs.name_version }}.tar.gz README.md ${{ steps.find_rockspec.outputs.rockspec_file }} lua/

    - name: Upload Rock to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: resty-yubikey-auth-rock
        path: "${{ steps.get_version_and_name.outputs.name_version }}.tar.gz"

    # - name: Create GitHub Release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: "v${{ steps.get_version.outputs.version }}"
    #     release_name: "Release v${{ steps.get_version.outputs.version }}"
    #     draft: false
    #     prerelease: false
    #     body: "Automated release of version ${{ steps.get_version.outputs.version }}."

    # - name: Upload .rock File to Release
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: rocks/*.rock
    #     asset_name: resty-yubikey-auth-${{ steps.get_version.outputs.version }}.rock
    #     asset_content_type: application/x-tar