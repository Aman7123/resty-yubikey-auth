name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Lua 5.1
      uses: leafo/gh-actions-lua@v10
      with:
        luaVersion: '5.1'

    - uses: leafo/gh-actions-luarocks@v4.3.0

    - name: Install Dependencies
      run: |
        luarocks install luacheck

    - name: Lint Code with Luacheck
      run: |
        luacheck . --no-color --exclude-files ".*"

    - name: Find .rockspec File
      id: find_rockspec
      run: |
        rockspec_file=$(find . -maxdepth 1 -name "*.rockspec" | head -n 1)
        echo "Found rockspec file: $rockspec_file"
        echo "rockspec_file=$rockspec_file" >> $GITHUB_OUTPUT

    - name: Get App Version, Name, and Combined Variable from Lua File
      id: get_version_and_name
      run: |
        NAME=$(grep -oP '(?<=^local name = ")[^"]*' ${{ steps.find_rockspec.outputs.rockspec_file }})
        APP_VERSION=$(grep -oP '(?<=^local app_version = ")[^"]*' ${{ steps.find_rockspec.outputs.rockspec_file }})
        NAME_VERSION="${NAME}-${APP_VERSION}"
        echo "Name: $NAME"
        echo "App Version: $APP_VERSION"
        echo "Name and Version: $NAME_VERSION"
        echo "name=$NAME" >> $GITHUB_OUTPUT
        echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
        echo "name_version=$NAME_VERSION" >> $GITHUB_OUTPUT

    - name: Build Package
      run: |
        tar czf ${{ steps.get_version_and_name.outputs.name_version }}.tar.gz README.md ${{ steps.find_rockspec.outputs.rockspec_file }} lua/

    - name: Create Git Tag
      id: create_tag
      run: |
        git tag "v${{ steps.get_version_and_name.outputs.app_version }}"
        git push origin "v${{ steps.get_version_and_name.outputs.app_version }}"

    - name: Create GitHub Release and Upload Asset
      uses: softprops/action-gh-release@v2.0.8
      with:
        files: ${{ steps.get_version_and_name.outputs.name_version }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAG_NAME: "v${{ steps.get_version_and_name.outputs.app_version }}"
        RELEASE_NAME: "Release v${{ steps.get_version_and_name.outputs.app_version }}"
        DRAFT: false
        PRERELEASE: false